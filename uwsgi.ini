# Helpful UWSGI info:
#  https://www.digitalocean.com/community/tutorials/how-to-deploy-python-wsgi-applications-using-uwsgi-web-server-with-nginx
#  http://uwsgi-docs.readthedocs.org/en/latest/Management.html


[uwsgi]
# For stand-alone UWSGI, support http connections on port 9000
#  e.g. curl http://localhost:9000/flask_app ; echo
# http = 127.0.0.1:9000

# With NGINX fronting UWSGI, use a unix socket for connection
socket = uwsgi.socket


# Our application is in "app_flask.py", and the callable is "application"
module = app_flask:application

# Serve up some UWSGI status info...
stats = 127.0.0.1:9001

# Clean up pidfile, socket file on exit
vacuum = true

# Daemonize
daemonize = ./logs/uwsgi.log

# Save the master PID so we can easily reload/stop UWSGI:
#  uwsgi --reload uwsgi.pid
#  uwsgi --stop uwsgi.pid
pidfile = ./uwsgi.pid

# What the heck, run some threads and processses
processes = 2
threads = 2

